max_modulus_words fix 64
include 'RSA-fasm.inc'

macro display_hex1 val {
	local ..d
	..d=(val) and 0fh + '0'
	if ..d > '9'
	   ..d=..d+7
	end if
	display ..d
}
macro display_hex2 val {
	display_hex1 ((val) shr 4)
	display_hex1 (val)
}
macro display_hex4 val {
	display_hex2 ((val) shr 8)
	display_hex2 (val)
}
macro display_hex8 val {
	display_hex4 ((val) shr 16)
	display_hex4 (val)
}
macro display_dwords source,count {
	repeat count
	load temp dword from (source+(count-%)*4)
	display_hex8 temp
;	display ','
	end repeat
	display 13,10
}

macro RSA_test words,encrypt_key,[decrypt_key] {
	common
	modulus_words equ words
	load RSA_top_byte byte from msg+modulus_words*4-1
    if RSA_top_byte=0
	store byte 080h at msg+modulus_words*4-1
    end if
	RSA_encrypt msg,chk,mod_#words,decrypt_key
	RSA_encrypt chk,chk,mod_#words,encrypt_key
    repeat modulus_words
	load RSA_temp_byte1 dword from msg+(%-1)*4
	load RSA_temp_byte2 dword from chk+(%-1)*4
      if RSA_temp_byte1<>RSA_temp_byte2
	display_dwords msg,modulus_words
	display_dwords chk,modulus_words
	halt - Something went wrong
      end if
    end repeat
	store byte RSA_top_byte at msg+modulus_words*4-1
}

virtual at 0

msg:	db	'This is a test message'
	if max_modulus_words*4-$+msg>0
	times	max_modulus_words*4-$+msg db 0
	end if
chk:	times max_modulus_words dd 0

mod_01: dd	0FFFFFFFDh
align 8
mod_02: dq	0F5E0584A69768C57h
mod_04: dq	08ADEFA5BC60428FDh,0E93222C98B6E9F00h
mod_08: dq	0C269E77F258A341Fh,03570EA974386A19Eh,033C6BB4993BA80DDh,0ECC54AA5E8C00635h
mod_16: dq	05E92B22DFF503C7Bh,05B2F062DD8C13F22h,0FA8FDAF9DF5C1B05h,088ABD46CADB707A7h
	dq	0CE4B56BBB19C50EEh,0CC107EA49A80727Ch,0FE3DB9CB1DD18BBAh,0E948B30F5E4C7434h
mod_32: dq	0B105993C865F06ABh,0E9B0992D1C196762h,08332E15CA22F2BE8h,01E8218483CE1515Dh
	dq	0D9491AE8B642476Ah,07C9F6849AAC90A50h,0984B7983D019D66Ch,0C95A97DF3E911FFBh
	dq	0351E6965AF2DA4AEh,090B314463AEF36F2h,00ED0E92F89C2E22Bh,0082847B512A36D33h
	dq	0AD6B886F26807AC6h,06D59B57272270733h,0019A4C429E2EE665h,0EAD9BB0B28BD2F73h
mod_64: dq	0923EB34864B897E7h,0916C8D469467C1E7h,06744FEB0486A3424h,0C195216251C5FECFh
	dq	07C76AB40A7D3DAF8h,021FD2C4EF73FFE15h,035F36418D999EB2Ah,01CD1677409AA2D6Bh
	dq	04DCC3B790E71F4F2h,0598F32479D942274h,097A2B6C935DA774Eh,03956311EB35D47F9h
	dq	0E2B96E73FEFB6A91h,07358FC43F0724753h,03845EB9FC4E3CDF4h,0B4AA954B19F0A566h
	dq	06F0B8C8E78D97E6Ah,083A42233EDD9753Eh,0FFB3D60FF329CA91h,045C16E5601FBECF3h
	dq	0407215BB54108D57h,0C47DB4336ECB7015h,04B11DB9CB3F6036Fh,0564AD21A65A5BDACh
	dq	0A2465FF656B498DEh,08C03D633FA206528h,01200AD6B01C7F4C9h,0BB75DE7ECE2C9FD4h
	dq	003A780E357E69D2Fh,06DC21E87284CE14Ah,09207E2637184FA05h,0AAACEB7438C5E6B0h

    RSA_test 01,13,00005748Dh
    RSA_test 02,03,010644A26F6A548D3h
    RSA_test 04,03,01B07027A7CD1B73Bh,026DDB076EC926FD5h
    RSA_test 08,05,0F21156363757F48Dh,0B6D03AB191A95585h,014B5E483D4B10057h,05EB5510F29E668E2h
    RSA_test 16,07,06D2CD042BB8B3567h,038ECEFD59AA56CA5h,0979F587848E13AE6h,0091C6A663EEF7D23h,\
		   08415867EC508171Fh,05EE0242F079269DAh,048A3EBF0E3F2BA35h,042A70E96AD3A6A58h
    RSA_test 32,05,044D322289318649Dh,0CB594DDBFF610372h,0F3571EB2B17838E7h,02175175331BCB648h,\
		   017274B19073AC05Ch,094AF3ABD21FA189Ch,0DC9B14E634C940FBh,0ECBAA40A33AA7527h,\
		   08C131817D87A8271h,0811D015A03EDD076h,000FCDC5880A6979Ch,044CF7C3F45825C9Dh,\
		   0C74B6F7EE06EF71Eh,0D4170C18B246DE58h,05570AFC02CADCB17h,00FA81D8946FB8BB2h
    RSA_test 64,07,05963451126E7B807h,07FEA43B2B767C9DBh,0F38542FB72758DE4h,07EDA0637B9ACF04Eh,\
		   02EC188C270DEC120h,0959812E6DC674D15h,07EEE95FDACA0B33Eh,06917AC6BABFFD50Fh,\
		   04595343286C33D48h,06A41C4727A97A1B6h,0C0AF94C1C10CF5A3h,0747F793A92E329A7h,\
		   01AC240562CBDF7FBh,03D48963FD28EA472h,09AFD21FF8D958A29h,0BC10CF1CC0B91255h,\
		   0B2034CBAFDF4FF8Bh,0B7E5C0A11F62B3C8h,0FFEA3D2920E75E72h,0EF5BD661B76C8CD7h,\
		   036FC063585BB9618h,0A5DAC5C58D5EB24Fh,05E97635157FD258Dh,0865E852C1D0AC87Ah,\
		   052EF8921CFA1503Fh,0BA4A3D336C094179h,04E49561E92CB6A82h,0358F64243AE82DAAh,\
		   093546DF7CFF8BF32h,01F5C08B8E6F164F0h,029B91C1C6993B526h,030C3B0FCA281AFA0h

end virtual

display 'Okay'
